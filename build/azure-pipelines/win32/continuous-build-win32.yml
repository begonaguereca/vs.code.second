steps:
- task: NodeTool@0
  inputs:
    versionSpec: "8.12.0"
- task: UsePythonVersion@0
  inputs:
    versionSpec: '2.x'
    addToPath: true
- script: |
    set PreFetch=--install.pre-fetch-script "node D:\\a\\1\\s\\build\\cloud-spool\\cli.js retrieve -f .\\yarn.lock -cache-url https://cloudspool-dev.azurewebsites.net/api/vscodeyarncache/"
    set PostInstall=--install.post-install-script "node D:\\a\\1\\s\\build\\cloud-spool\\cli.js cache .\\node_modules -f .\\yarn.lock -cache-url https://cloudspool-dev.azurewebsites.net/api/vscodeyarncache/"
    ECHO. >> $(Build.SourcesDirectory)\.yarnrc
    ECHO %PreFetch% >> $(Build.SourcesDirectory)\.yarnrc
    ECHO %PostInstall% >> $(Build.SourcesDirectory)\.yarnrc
  displayName: Set Yarnrc
- bash: |
    export PATH="/D/a/1/s/build/yarn-custom/bin:$PATH"
    cat /d/a/1/s/.yarnrc
    yarn install
  displayName: Install Dependencies
- powershell: |
    yarn gulp electron
  displayName: Download Electron
- powershell: |
    yarn gulp hygiene
  displayName: Run Hygiene Checks
- powershell: |
    yarn monaco-compile-check
  displayName: Run Monaco Editor Checks
- script: |
    yarn strict-null-check
  displayName: Run Strict Null Checks
- powershell: |
    yarn compile
  displayName: Compile Sources
- powershell: |
    yarn download-builtin-extensions
  displayName: Download Built-in Extensions
- powershell: |
    .\scripts\test.bat --tfs "Unit Tests"
  displayName: Run Unit Tests
- powershell: |
    .\scripts\test-integration.bat --tfs "Integration Tests"
  displayName: Run Integration Tests
- task: PublishTestResults@2
  displayName: Publish Tests Results
  inputs:
    testResultsFiles: '*-results.xml'
    searchFolder: '$(Build.ArtifactStagingDirectory)/test-results'
  condition: succeededOrFailed()
